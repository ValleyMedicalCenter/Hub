name: test
on:
  pull_request:
jobs:
  test:
    name: python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest]
        python-version: [3.7, 3.8, 3.9, '3.10']
      fail-fast: true

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: 12345
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432

    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: setup python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: install deps
      run: |
        python -m pip install tox poetry tox-poetry codecov
        sudo sed -i 's/azure\.//' /etc/apt/sources.list
        sudo apt-get update
        sudo apt-get install libxml2-dev libxmlsec1-dev libxmlsec1-openssl pkg-config build-essential libssl-dev libffi-dev curl git wget libldap2-dev python3-dev python3-pip python3-setuptools unixodbc unixodbc-dev libpq-dev nginx sqlite3 libsqlite3-0 libsasl2-dev libxml2-dev libxmlsec1-dev libxmlsec1-dev redis-server ufw gnupg
    - name: start test services
      run: |
        docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=@Passw0rd>" -p 1433:1433 --name sql1 -h sql1  -d mcr.microsoft.com/mssql/server:2017-latest
        docker run -p 23:22 -d emberstack/sftp --name sftp
        docker run -d --name ftpd_server -p 21:21 -p 30000-30009:30000-30009 -e FTP_USER_NAME=demo -e FTP_USER_PASS=demo -e FTP_USER_HOME=/home/demo -e "PUBLICHOST=localhost" -e "ADDED_FLAGS=-d -d" stilliard/pure-ftpd
    - name: test
      run: tox
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        PGPASSWORD: 12345
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        # DATABASE_URL: postgresql+psycopg2://postgres:12345@localhost/postgres
    - name: upload cov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: true
        verbose: true
