#!/bin/sh
python3 -m pip install colorama tqdm requests -q --no-warn-script-location

VERSION=<version>
EXTERNAL_URL=${EXTERNAL_URL:-$HOSTNAME}

BASE_DIR="/usr/lib/atlas-hub"
INSTALL_DIR="$BASE_DIR/app"
USER_DIR="/etc/atlas-hub"

. $BASE_DIR/functions.sh

# initialize colors
color
name

cd "$BASE_DIR"

# create pass file
python3 -c "from installers import build_secrets; build_secrets()"

install_configuration

# download app
python3 -c "from installers import download; download(\"https://github.com/atlas-bi/atlas-automation-hub/archive/refs/tags/$VERSION.tar.gz\", \"Atlas Hub $VERSION\", \"app.tar.gz\")" 
tar -f "app.tar.gz" -xz  -C .
rm "app.tar.gz"
echo atlas-automation-hub-* | xargs -n1 -i mv {} "app"

# configure web app
python3 -c "from installers import build_web_configuration; build_web_configuration(\"$INSTALL_DIR\", \"/etc/atlas-hub/config.ini\")"

# install poetry
if [ ! -e "$HOME/.local/bin/poetry" ]; then
  #echo "${GREEN}"
  python3 -c "from installers import download; download(\"https://install.python-poetry.org\", \"Poetry\", \"poetry.py\")"
  fmt_blue "Installing Poetry"
  $(which python3) poetry.py
  rm poetry.py
fi

# install deps
cd "$INSTALL_DIR"
"$HOME/.local/bin/poetry" config --local virtualenvs.in-project true
"$HOME/.local/bin/poetry" config --local virtualenvs.create true
"$HOME/.local/bin/poetry" install --no-dev

# stop services if running
fmt_blue "Stopping services"
stop_services

cd $BASE_DIR
fmt_blue "Configuring Nginx"
python3 -c "from installers import build_nginx_configuration;build_nginx_configuration(\"/etc/atlas-hub/config.ini\")"

if [ "$(pidof systemd)" != "" ]; then
    fmt_blue "Configuring Gunicorn"

    gunicorn_services
fi


cd $INSTALL_DIR

# not a docker image.. has systemd installed and running
fmt_blue "Starting services"
start_services

# configure database
fmt_blue "Setting Up Database"
postgres_init $BASE_DIR



# copy model between apps
fmt_blue "Creating API db model"
cp web/model.py runner/model.py
cp web/model.py scheduler/model.py

chown -R www-data "$INSTALL_DIR"

# install database migrations
fmt_blue "Installing database migrations"
export FLASK_ENV=production && export FLASK_DEBUG=0 && export FLASK_APP=web && .venv/bin/flask db upgrade && .venv/bin/flask cli seed

echo ""
fmt_green "Thanks for installing Atlas Automation Hub!"

recommendations
