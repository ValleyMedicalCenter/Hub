; Automated Testing.
;
; Testing should be run following any code changes.
;
; .. code-block:: console
;
;    tox -r
;    # or to speed things up use multiple processes
;    tox -r -p 8
;


[tox]
envlist =
    test_scheduler
    test_web
    test_runner
    cov
skip_missing_interpreters = True
isolated_build = True


[gh-actions]
python =
    3.6: test_scheduler
    3.7: test_scheduler
    3.8: test_scheduler
    3.9: test_scheduler, cov static, html, typing, format, lint


[testenv:test_scheduler]
setenv =
    PYTHONDONTWRITEBYTECODE=1
    COVERAGE_FILE=.coverage
passenv = *
extras =
    test
changedir = scheduler
commands =
    ; first comand should not append. test are split b/c apscheduler doesn't offically turn off in pytest.
    pytest tests/test_events.py --cov --cov-branch --cov-report=term-missing --disable-warnings
    pytest tests/test_api.py --cov --cov-append --cov-branch --cov-report=term-missing --disable-warnings
show_missing = True
whitelist_externals:
    cd

[testenv:test_runner]
setenv =
    PYTHONDONTWRITEBYTECODE=1
    COVERAGE_FILE=.coverage
passenv = *
extras =
    test
changedir = runner
commands =
    ; first comand should not append. test are split b/c apscheduler doesn't offically turn off in pytest.
    pytest tests/ --cov --cov-branch --cov-report=term-missing --disable-warnings
show_missing = True
whitelist_externals:
    cd

[testenv:test_web]
setenv =
    PYTHONDONTWRITEBYTECODE=1
    COVERAGE_FILE=.coverage
passenv = *
extras =
    test
changedir = web
commands =
    ; first comand should not append. test are split b/c apscheduler doesn't offically turn off in pytest.
    pytest tests/ --cov --cov-branch --cov-report=term-missing --disable-warnings
show_missing = True
whitelist_externals:
    cd

[testenv:cov]
deps = coverage
commands =
    coverage combine scheduler/.coverage web/.coverage
    coverage report
    coverage xml
depends =
    cov: test_scheduler
    cov: test_web
    cov: test_runner


[testenv:radon]
deps = radon
commands =
    radon cc web runner scheduler  --total-average
    radon mi web runner scheduler
skip_install: true

[testenv:html]
deps = djlint
commands =
    djlint . -e "html.j2" -i "W013,W004,W018,W006,W010"
    djlint . --check --quiet -e "html.j2"
skip_install = true

[testenv:static]
commands =
    npm install -g npm
    npm install
    ; npm audit fix
    ; npx prettier --write web/static/js/ --loglevel error
    npx eslint --fix web/static/js/ --quiet
    npx jshint web/static/js/
    ; npx prettier --write web/static/assets/ --loglevel error
    npx stylelint --fix web/static/assets/
allowlist_externals =
    npm
    npx
skip_install = true

[testenv:reformat]
description = reformat code
basepython = python3.9
deps =
    isort
    black
commands =
    black .
    isort .
skip_install = true
skip_gitignore = true

[testenv:lint]
basepython = python3.9
description = check code style
deps =
    reformat
    flake8
    flake8-bugbear
    flake8-docstrings
    flake8-rst-docstrings
    flake8-rst
    flake8-typing-imports
    flake8-builtins
    pep8-naming
    flake8-comprehensions
    flake8-bandit
    flake8-eradicate
    flake8-pytest-style
    flake8-print
    flake8-simplify
    flake8-variables-names
    flake8-markdown
    pygments
    black
    pylint
    mypy
    types-Jinja2
    types-python-dateutil
    types-paramiko
    types-requests
    types-Flask
    types-redis
    sqlalchemy
    sqlalchemy2-stubs
commands =
    isort . --check
    black . --fast --check
    flake8 scheduler/ web/ runner/ publish/
    pylint scheduler/ web/ runner/ publish/
    mypy scheduler web runner publish --show-traceback --show-error-codes
skip_install = true
